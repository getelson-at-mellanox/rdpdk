#! /bin/sh

# Required environment variables:
# DPDK_SOURCE_ROOT - DPDK sources base directory
# DPDK_BUILD_ROOT - DPDK build directory

if test "x$dbg" != 'x'; then
  set -x
fi

if test "x$DPDK_SOURCE_ROOT" = 'x'; then
  echo "DPDK_SOURCE_ROOT was not defined"
  exit 255
fi

if test "x$DPDK_BUILD_ROOT" = 'x'; then
  echo "DPDK_BUILD_ROOT was not defined"
  exit 255
fi

base='rte_ethdev'
input_dir="$DPDK_SOURCE_ROOT/lib/ethdev"

bindgen_opt="--wrap-unsafe-ops --no-layout-tests \
  --no-derive-debug \
  --blocklist-var  RTE_EAL_PMD_PATH  \
  --blocklist-function q.cvt.* \
  --blocklist-function strtold \
  --blocklist-function rte_mp_.* \
  --blocklist-function rte_mbuf_.* \
  --blocklist-function .*rte_pktmbuf_.* \
  --blocklist-function rte_memseg_.* \
  --blocklist-function rte_memzone_.* \
  --blocklist-function rte_mempool_.* \
"

bindgen_clang_opt="-Wno-unused-command-line-argument \
  -I${DPDK_SOURCE_ROOT}/config \
  -I${DPDK_SOURCE_ROOT}/build \
  -I${DPDK_SOURCE_ROOT}/lib/eal/include \
  -I${DPDK_SOURCE_ROOT}/lib/log \
  -I${DPDK_SOURCE_ROOT}/lib/net \
  -I${DPDK_SOURCE_ROOT}/lib/mbuf \
  -I${DPDK_SOURCE_ROOT}/lib/mempool \
  -I${DPDK_SOURCE_ROOT}/lib/ring \
  -I${DPDK_SOURCE_ROOT}/lib/meter \
  -I${DPDK_SOURCE_ROOT}/lib/ethdev \
  -I${DPDK_SOURCE_ROOT}/lib/eal/linux/include \
  -I${DPDK_SOURCE_ROOT}/lib/eal/x86/include \
"

# bindgen cannot process complex macro definitions
# manually simplify macros before conversion
cp "${input_dir}/${base}.h" "/tmp/${base}.h"
sed -i -e 's/RTE_BIT64(\([0-9]*\))/(1UL << \1)/g' "/tmp/${base}.h"
sed -i -e 's/RTE_BIT32(\([0-9]*\))/(1U << \1)/g' "/tmp/${base}.h"
sed -i -e 's/UINT64_C(\([0-9]*\))/\1/g' "/tmp/${base}.h"

bindgen $bindgen_opt \
  --output "$out_dir/$base.rs" \
  "/tmp/${base}.h" -- $bindgen_clang_opt

sed -i 's/repr(align(2))/repr(packed(2))/g' "$out_dir/$base.rs"
