From 0380628948b7aa542a38867cd133a9c20ebaee65 Mon Sep 17 00:00:00 2001
From: Gregory Etelson <getelson@nvidia.com>
Date: Sun, 6 Apr 2025 13:41:07 +0300
Subject: [PATCH 2/2] net/mlx5: refactor Rx/Tx functions selection

- Arrange Rx functions in `mlx5_rx_functions` array
- Add `mlx5_select_rx_function_index` and
`mlx5_select_tx_function_index` functions to calculate Rx/Tx functions
indexes.

Export `mlx5_select_rx_function_index`,
`mlx5_select_tx_function_index`, `mlx5_rx_functions`, `txoff_func`
symbols for Rust integration.

Signed-off-by: Gregory Etelson <getelson@nvidia.com>
---
 drivers/net/mlx5/mlx5.h        |  2 ++
 drivers/net/mlx5/mlx5_ethdev.c | 33 ++++++++++++++++++++++++++++-----
 drivers/net/mlx5/mlx5_rx.h     |  2 ++
 drivers/net/mlx5/mlx5_tx.c     | 17 +++++++++++------
 drivers/net/mlx5/mlx5_tx.h     |  6 ++++++
 drivers/net/mlx5/version.map   |  6 ++++++
 6 files changed, 55 insertions(+), 11 deletions(-)

diff --git a/drivers/net/mlx5/mlx5.h b/drivers/net/mlx5/mlx5.h
index 0194887a8b..3755314e4d 100644
--- a/drivers/net/mlx5/mlx5.h
+++ b/drivers/net/mlx5/mlx5.h
@@ -2311,6 +2311,7 @@ int mlx5_dev_set_mtu(struct rte_eth_dev *dev, uint16_t mtu);
 int mlx5_hairpin_cap_get(struct rte_eth_dev *dev,
 			 struct rte_eth_hairpin_cap *cap);
 eth_rx_burst_t mlx5_select_rx_function(struct rte_eth_dev *dev);
+uint32_t mlx5_select_rx_function_index(struct rte_eth_dev *dev);
 struct mlx5_priv *mlx5_port_to_eswitch_info(uint16_t port, bool valid);
 struct mlx5_priv *mlx5_dev_to_eswitch_info(struct rte_eth_dev *dev);
 int mlx5_dev_configure_rss_reta(struct rte_eth_dev *dev);
@@ -2613,6 +2614,7 @@ void mlx5_txpp_unmap_hca_bar(struct rte_eth_dev *dev);
 /* mlx5_rxtx.c */
 
 eth_tx_burst_t mlx5_select_tx_function(struct rte_eth_dev *dev);
+int mlx5_select_tx_function_index(struct rte_eth_dev *dev);
 
 /* mlx5_flow_aso.c */
 
diff --git a/drivers/net/mlx5/mlx5_ethdev.c b/drivers/net/mlx5/mlx5_ethdev.c
index 7708a0b808..6d04940f4a 100644
--- a/drivers/net/mlx5/mlx5_ethdev.c
+++ b/drivers/net/mlx5/mlx5_ethdev.c
@@ -664,6 +664,21 @@ mlx5_dev_set_mtu(struct rte_eth_dev *dev, uint16_t mtu)
 	return -rte_errno;
 }
 
+enum {
+	MLX5_RX_BURST,
+	MLX5_RX_BURST_VEC,
+	MLX5_RX_BURST_MPRQ,
+	MLX5_RX_BURST_MPRQ_VEC,
+	MLX5_RX_BURST_MAX,
+};
+
+const eth_rx_burst_t mlx5_rx_functions[] = {
+	mlx5_rx_burst,
+	mlx5_rx_burst_vec,
+	mlx5_rx_burst_mprq,
+	mlx5_rx_burst_mprq_vec,
+};
+
 /**
  * Configure the RX function to use.
  *
@@ -676,28 +691,36 @@ mlx5_dev_set_mtu(struct rte_eth_dev *dev, uint16_t mtu)
 eth_rx_burst_t
 mlx5_select_rx_function(struct rte_eth_dev *dev)
 {
-	eth_rx_burst_t rx_pkt_burst = mlx5_rx_burst;
+	uint32_t ix = mlx5_select_rx_function_index(dev);
+
+	return mlx5_rx_functions[ix];
+}
+
+uint32_t
+mlx5_select_rx_function_index(struct rte_eth_dev *dev)
+{
+	uint32_t ix = MLX5_RX_BURST;
 
 	MLX5_ASSERT(dev != NULL);
 	if (mlx5_check_vec_rx_support(dev) > 0) {
 		if (mlx5_mprq_enabled(dev)) {
-			rx_pkt_burst = mlx5_rx_burst_mprq_vec;
+			ix = MLX5_RX_BURST_MPRQ_VEC;
 			DRV_LOG(DEBUG, "port %u selected vectorized"
 				" MPRQ Rx function", dev->data->port_id);
 		} else {
-			rx_pkt_burst = mlx5_rx_burst_vec;
+			ix = MLX5_RX_BURST_VEC;
 			DRV_LOG(DEBUG, "port %u selected vectorized"
 				" SPRQ Rx function", dev->data->port_id);
 		}
 	} else if (mlx5_mprq_enabled(dev)) {
-		rx_pkt_burst = mlx5_rx_burst_mprq;
+		ix = MLX5_RX_BURST_MPRQ;
 		DRV_LOG(DEBUG, "port %u selected MPRQ Rx function",
 			dev->data->port_id);
 	} else {
 		DRV_LOG(DEBUG, "port %u selected SPRQ Rx function",
 			dev->data->port_id);
 	}
-	return rx_pkt_burst;
+	return ix;
 }
 
 /**
diff --git a/drivers/net/mlx5/mlx5_rx.h b/drivers/net/mlx5/mlx5_rx.h
index 6380895502..7b9e36b14b 100644
--- a/drivers/net/mlx5/mlx5_rx.h
+++ b/drivers/net/mlx5/mlx5_rx.h
@@ -689,4 +689,6 @@ mlx5_is_external_rxq(struct rte_eth_dev *dev, uint16_t queue_idx)
 #define LWM_COOKIE_PORTID_OFFSET 16
 #define LWM_COOKIE_PORTID_MASK 0xffff
 
+extern const eth_rx_burst_t mlx5_rx_functions[];
+
 #endif /* RTE_PMD_MLX5_RX_H_ */
diff --git a/drivers/net/mlx5/mlx5_tx.c b/drivers/net/mlx5/mlx5_tx.c
index 4286876e12..1b90c25b29 100644
--- a/drivers/net/mlx5/mlx5_tx.c
+++ b/drivers/net/mlx5/mlx5_tx.c
@@ -291,10 +291,7 @@ mlx5_tx_descriptor_status(void *tx_queue, uint16_t offset)
  * supported offloads set. The array is used to select the Tx burst
  * function for specified offloads set at Tx queue configuration time.
  */
-const struct {
-	eth_tx_burst_t func;
-	unsigned int olx;
-} txoff_func[] = {
+const struct mlx5_txoff_func txoff_func[] = {
 MLX5_TXOFF_INFO(full_empw,
 		MLX5_TXOFF_CONFIG_MULTI | MLX5_TXOFF_CONFIG_TSO |
 		MLX5_TXOFF_CONFIG_SWP |	MLX5_TXOFF_CONFIG_CSUM |
@@ -499,6 +496,14 @@ MLX5_TXOFF_INFO(i_mpw,
  */
 eth_tx_burst_t
 mlx5_select_tx_function(struct rte_eth_dev *dev)
+{
+	int m = mlx5_select_tx_function_index(dev);
+
+	return m >= 0 ? txoff_func[m].func : NULL;
+}
+
+int
+mlx5_select_tx_function_index(struct rte_eth_dev *dev)
 {
 	struct mlx5_priv *priv = dev->data->dev_private;
 	struct mlx5_port_config *config = &priv->config;
@@ -639,7 +644,7 @@ mlx5_select_tx_function(struct rte_eth_dev *dev)
 		DRV_LOG(DEBUG, "port %u has no selected Tx function"
 			       " for requested offloads %04X",
 				dev->data->port_id, olx);
-		return NULL;
+		return -EINVAL;
 	}
 	DRV_LOG(DEBUG, "port %u has selected Tx function"
 		       " supporting offloads %04X/%04X",
@@ -666,7 +671,7 @@ mlx5_select_tx_function(struct rte_eth_dev *dev)
 		else
 			DRV_LOG(DEBUG, "\tEMPW  (Enhanced MPW)");
 	}
-	return txoff_func[m].func;
+	return m;
 }
 
 /**
diff --git a/drivers/net/mlx5/mlx5_tx.h b/drivers/net/mlx5/mlx5_tx.h
index 55568c41b1..d208f21a87 100644
--- a/drivers/net/mlx5/mlx5_tx.h
+++ b/drivers/net/mlx5/mlx5_tx.h
@@ -23,6 +23,12 @@
 #include "mlx5_rxtx.h"
 #include "mlx5_trace.h"
 
+struct mlx5_txoff_func {
+	eth_tx_burst_t func;
+	unsigned int olx;
+};
+extern const struct mlx5_txoff_func txoff_func[];
+
 /* TX burst subroutines return codes. */
 enum mlx5_txcmp_code {
 	MLX5_TXCMP_CODE_EXIT = 0,
diff --git a/drivers/net/mlx5/version.map b/drivers/net/mlx5/version.map
index 560f7ef79b..bbcdb93451 100644
--- a/drivers/net/mlx5/version.map
+++ b/drivers/net/mlx5/version.map
@@ -1,4 +1,10 @@
 DPDK_25 {
+	global:
+
+	txoff_func;
+	mlx5_rx_functions;
+	mlx5_select_rx_function_index;
+	mlx5_select_tx_function_index;
 	local: *;
 };
 
-- 
2.45.2

